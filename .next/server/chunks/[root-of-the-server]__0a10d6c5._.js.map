{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///app/app/utils/api/science-problem/generateAIResponse.ts"],"sourcesContent":["import { GoogleGenerativeAI } from '@google/generative-ai';\nexport default async function generateAIResponse(prompt: string) {\n    // Google AI constants.\n    if (!process.env.GOOGLE_API_KEY) {\n        throw new Error('GOOGLE_API_KEY is not defined');\n    }\n    // Google AI constants.\n    const googleAI = new GoogleGenerativeAI(process.env.GOOGLE_API_KEY);\n    const googleAIModel = googleAI.getGenerativeModel({\n        model: 'gemini-2.5-flash'\n    });\n\n    // Results constants.\n    const result = await googleAIModel.generateContent(prompt);\n    const resultText = result.response.text();\n    return resultText;\n}"],"names":[],"mappings":";;;;AAAA;;AACe,eAAe,mBAAmB,MAAc;IAC3D,uBAAuB;IACvB,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;QAC7B,MAAM,IAAI,MAAM;IACpB;IACA,uBAAuB;IACvB,MAAM,WAAW,IAAI,sLAAkB,CAAC,QAAQ,GAAG,CAAC,cAAc;IAClE,MAAM,gBAAgB,SAAS,kBAAkB,CAAC;QAC9C,OAAO;IACX;IAEA,qBAAqB;IACrB,MAAM,SAAS,MAAM,cAAc,eAAe,CAAC;IACnD,MAAM,aAAa,OAAO,QAAQ,CAAC,IAAI;IACvC,OAAO;AACX","debugId":null}},
    {"offset": {"line": 116, "column": 0}, "map": {"version":3,"sources":["file:///app/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\nif (!supabaseUrl || !supabaseAnonKey) {\n  throw new Error('Missing Supabase environment variables')\n}\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\nexport type Database = {\n  public: {\n    Tables: {\n      science_problem_sessions: {\n        Row: {\n          id: string\n          created_at: string\n          problem_text: string\n          correct_answer: number\n        }\n        Insert: {\n          id?: string\n          created_at?: string\n          problem_text: string\n          correct_answer: number\n        }\n        Update: {\n          id?: string\n          created_at?: string\n          problem_text?: string\n          correct_answer?: number\n        }\n      }\n      science_problem_submissions: {\n        Row: {\n          id: string\n          session_id: string\n          user_answer: number\n          is_correct: boolean\n          feedback_text: string\n        }\n        Insert: {\n          id?: string\n          session_id: string\n          user_answer: number\n          is_correct: boolean\n          feedback_text: string\n        }\n        Update: {\n          id?: string\n          session_id?: string\n          user_answer?: number\n          is_correct?: boolean\n          feedback_text?: string\n        }\n      }\n    }\n  }\n}"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEN;;AAIO,MAAM,WAAW,IAAA,yMAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///app/app/utils/api/science-problem/getProblem.ts"],"sourcesContent":["import { supabase } from \"../../../../lib/supabaseClient\";\n\nexport default async function getProblem(id: any) {\n    try {\n        const response = await supabase\n            .from('science_problem_sessions')\n            .select('*')\n            .eq('id', id)\n            .single();\n\n        if (response.error) throw response.error;\n        return response.data\n    } catch (error) {\n        let errMsg = 'Supabase Error fetching the session.';\n        console.error(errMsg, error);\n        throw new Error(String(error));\n    }\n}"],"names":[],"mappings":";;;;AAAA;;AAEe,eAAe,WAAW,EAAO;IAC5C,IAAI;QACA,MAAM,WAAW,MAAM,mIAAQ,CAC1B,IAAI,CAAC,4BACL,MAAM,CAAC,KACP,EAAE,CAAC,MAAM,IACT,MAAM;QAEX,IAAI,SAAS,KAAK,EAAE,MAAM,SAAS,KAAK;QACxC,OAAO,SAAS,IAAI;IACxB,EAAE,OAAO,OAAO;QACZ,IAAI,SAAS;QACb,QAAQ,KAAK,CAAC,QAAQ;QACtB,MAAM,IAAI,MAAM,OAAO;IAC3B;AACJ","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///app/app/utils/api/science-problem/postFeedback.ts"],"sourcesContent":["import { supabase } from \"../../../../lib/supabaseClient\";\n\nexport default async function postFeedback(id: any, answer: string, isCorrectAnswer: boolean, feedback: string) {\n    try {\n        const response = await supabase\n            .from('science_problem_submissions')\n            .insert([{\n                session_id: id,\n                user_answer: String(answer),\n                is_correct: isCorrectAnswer,\n                feedback_text: feedback\n            }]);\n        if (response.error) throw response.error;\n    } catch (error) {\n        let errMsg = 'Supabase Error saving feedback.';\n        console.error(errMsg, error);\n        throw new Error(String(error));\n    }\n}"],"names":[],"mappings":";;;;AAAA;;AAEe,eAAe,aAAa,EAAO,EAAE,MAAc,EAAE,eAAwB,EAAE,QAAgB;IAC1G,IAAI;QACA,MAAM,WAAW,MAAM,mIAAQ,CAC1B,IAAI,CAAC,+BACL,MAAM,CAAC;YAAC;gBACL,YAAY;gBACZ,aAAa,OAAO;gBACpB,YAAY;gBACZ,eAAe;YACnB;SAAE;QACN,IAAI,SAAS,KAAK,EAAE,MAAM,SAAS,KAAK;IAC5C,EAAE,OAAO,OAAO;QACZ,IAAI,SAAS;QACb,QAAQ,KAAK,CAAC,QAAQ;QACtB,MAAM,IAAI,MAAM,OAAO;IAC3B;AACJ","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///app/app/api/science-problem/submit/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport generateAIResponse from '../../../utils/api/science-problem/generateAIResponse';\nimport getProblem from '../../../utils/api/science-problem/getProblem';\nimport postFeedback from '../../../utils/api/science-problem/postFeedback';\n\nexport async function POST(req: NextRequest) {\n    try {\n\n        let request = await req.json();\n\n        let session = await getProblem(request.sessionId);\n\n        if (!session) {\n            throw new Error(\"Session not found or has expired.\");\n        }\n\n        let isCorrectAnswer = String(request.userAnswer) === session.correct_answer;\n\n        const prompt = `\n        The user was given the following science problem:\n        \"${session.problem_text}\"\n\n        The correct answer is: ${session.correct_answer}\n        The user's answer was: ${request.userAnswer}\n\n        The user was ${isCorrectAnswer ? 'correct' : 'incorrect'}.\n\n        Provide brief, encouraging, and personalized feedback for the user. If the user was incorrect, provide a hint on how to solve it without giving away the answer.\n      `;\n\n        let resultText = await generateAIResponse(prompt);\n\n        await postFeedback(request.sessionId, request.userAnswer, isCorrectAnswer, resultText);\n\n        return NextResponse.json({\n            isCorrectAnswer, feedback: resultText\n        }, { status: 200 });\n\n    } catch (error) {\n        // console.error('Path /api/science-problem/submit error:', error);\n        console.log(error);\n        let errMsg = 'Error submitting science problem';\n        return NextResponse.json(\n            {\n                error: errMsg,\n                details: error instanceof Error ? error.message : 'Unknown error occured.'\n            },\n            { status: 500 })\n    }\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAgB;IACvC,IAAI;QAEA,IAAI,UAAU,MAAM,IAAI,IAAI;QAE5B,IAAI,UAAU,MAAM,IAAA,oKAAU,EAAC,QAAQ,SAAS;QAEhD,IAAI,CAAC,SAAS;YACV,MAAM,IAAI,MAAM;QACpB;QAEA,IAAI,kBAAkB,OAAO,QAAQ,UAAU,MAAM,QAAQ,cAAc;QAE3E,MAAM,SAAS,CAAC;;SAEf,EAAE,QAAQ,YAAY,CAAC;;+BAED,EAAE,QAAQ,cAAc,CAAC;+BACzB,EAAE,QAAQ,UAAU,CAAC;;qBAE/B,EAAE,kBAAkB,YAAY,YAAY;;;MAG3D,CAAC;QAEC,IAAI,aAAa,MAAM,IAAA,4KAAkB,EAAC;QAE1C,MAAM,IAAA,sKAAY,EAAC,QAAQ,SAAS,EAAE,QAAQ,UAAU,EAAE,iBAAiB;QAE3E,OAAO,gJAAY,CAAC,IAAI,CAAC;YACrB;YAAiB,UAAU;QAC/B,GAAG;YAAE,QAAQ;QAAI;IAErB,EAAE,OAAO,OAAO;QACZ,mEAAmE;QACnE,QAAQ,GAAG,CAAC;QACZ,IAAI,SAAS;QACb,OAAO,gJAAY,CAAC,IAAI,CACpB;YACI,OAAO;YACP,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QACtD,GACA;YAAE,QAAQ;QAAI;IACtB;AACJ","debugId":null}}]
}